const e="式の入力方法",o="入力方法の説明",c={title:"フォーマット",width:{description:"文字は半角で入力する",example:"<code>１＋１</code>ではなく<code>1+1</code>と入力する"},character:{description:"使用できる文字は<code>+-*/()</code>と整数または実数",example1:"<code>1×1</code>は<code>1*1</code>と入力する",example2:"<code>1÷1</code>は<code>1/1</code>と入力する",defineInteger:"<strong><dfn>整数</dfn></strong>は<code>1</code>や<code>-1</code>など",defineReal:"<strong><dfn>実数</dfn></strong>は<code>0.1</code>や<code>10.001</code>など"},decimalPoint:{description:"小数点は<code>.</code>を使用する",example:"<code>0,1</code>ではなく<code>0.1</code>"},parentheses:{description:"引き算以外でマイナスを使う計算は<code>()</code>でくくる",example:"<code>2*3*-1</code>の場合だと<code>2*3*(-1)</code>"}},d={title:"仕様",description:"入力できる式の長さは空白を含めて64文字まで",space:{description:"空白は無視される",example:"<code>1 + 2 + 3</code>と<code>1+2+3</code>は同じ"},number:{description:"数値だけを入力するとそれがそのまま計算結果として出力される",example:"式に<code>2</code>と入力すると<code>2</code>が出力される"}},t={title:"無効な式",description:"式が以下の場合だとエラーを出力する",parenthesis:{beforeNumber:"<code>(</code>の前に数値、または<code>)</code>がある場合",afterNumber:"<code>)</code>の後に数値、または<code>(</code>がある場合",notPair:"<code>()</code>がペアになっていない場合"},endOperator:"式が演算子で終了する場合",notOperator:"数値の間に演算子が存在しない場合",zeroDivide:"<code>0</code>で割る場合"},i={title:e,description:o,format:c,specification:d,invalid:t};export{i as default,o as description,c as format,t as invalid,d as specification,e as title};
